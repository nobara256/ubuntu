#!/bin/bash

set -eE
trap 'echo Error: in $0 on line $LINENO' ERR

# export ARCH=arm64
# export DEBFULLNAME="Nobara Kurokawa"
# export DEBEMAIL="nobara@kurokawa"

# export KERNEL_RELEASE="6.13.0"
# export DEBIAN_RELEASE="5000"
# export PACKAGE_RELEASE="6.13.0~r5-5000"


export KERNEL_FLAVOUR="rockchip"
export DEBIAN_PACKAGE="kernel-${KERNEL_RELEASE}-${KERNEL_FLAVOUR}"
#"${KERNEL_MAJOR_RELEASE}-${DEBIAN_RELEASE}.${KERNEL_REBUILD}"

export PACKAGE_PATH=$1
export AARCH64="__AARCH64__"


# export ARCH_HOST_CC="aarch64-linux-gnu-gcc"
export ARCH_HOST_CC="x86_64-linux-gnu-gcc"


export MAKE="make \
             ARCH=$ARCH \
             CROSS_COMPILE=aarch64-linux-gnu- \
             CC=aarch64-linux-gnu-gcc \
             HOSTCC=$ARCH_HOST_CC \
             CONFIG_DEBUG_SECTION_MISMATCH=y \
             KERNELVERSION=$PACKAGE_RELEASE-$KERNEL_FLAVOUR \
             KBUILD_BUILD_VERSION=$DEBIAN_RELEASE \
             LOCALVERSION= \
             localver-extra= \
             CFLAGS_MODULE="-DPKG_ABI=$DEBIAN_RELEASE" \
             PYTHON=python3 \
             O=$AARCH64"


set -x


# Apply .config
$MAKE olddefconfig

# Make kernel modules dtb
$MAKE -j$(nproc) Image modules dtbs




#### Kernel Package ####
export KERNEL_BASE_PACKAGE="${PACKAGE_PATH}/${DEBIAN_PACKAGE}_${PACKAGE_RELEASE}_${ARCH}"

# Install kernel
$MAKE modules_install vdso_install dtbs_install INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH=$KERNEL_BASE_PACKAGE INSTALL_FW_PATH=$KERNEL_BASE_PACKAGE/lib/firmware/$PACKAGE_RELEASE-$KERNEL_FLAVOUR INSTALL_DTBS_PATH=$KERNEL_BASE_PACKAGE/lib/firmware/$PACKAGE_RELEASE-$KERNEL_FLAVOUR/device-tree

# Apply module blacklist
mkdir -p $KERNEL_BASE_PACKAGE/lib/modprobe.d
cat > $KERNEL_BASE_PACKAGE/lib/modprobe.d/blacklist_${PACKAGE_RELEASE}-${KERNEL_FLAVOUR}.conf << HEREDOC
# Kernel supplied blacklist for opi-5-plus ${PACKAGE_RELEASE}-${KERNEL_FLAVOUR} arm64
# Autogenerated watchdog blacklist
blacklist gpio_wdt
blacklist pcwd_pci
blacklist pcwd_usb
blacklist softdog
blacklist wdat_wdt
blacklist wdt_pci
HEREDOC

# Copy the kernel Image
mkdir -p $KERNEL_BASE_PACKAGE/boot
cp $AARCH64/arch/arm64/boot/Image $KERNEL_BASE_PACKAGE/boot/vmlinuz-$PACKAGE_RELEASE-$KERNEL_FLAVOUR
cp $AARCH64/System.map $KERNEL_BASE_PACKAGE/boot/System.map-$PACKAGE_RELEASE-$KERNEL_FLAVOUR
cp $AARCH64/.config $KERNEL_BASE_PACKAGE/boot/config-$PACKAGE_RELEASE-$KERNEL_FLAVOUR

# Dummy kernel header directory
mkdir -p $KERNEL_BASE_PACKAGE/usr/src/linux-headers-$PACKAGE_RELEASE-$KERNEL_FLAVOUR
ln -f -n -s /usr/src/linux-headers-$PACKAGE_RELEASE-$KERNEL_FLAVOUR $KERNEL_BASE_PACKAGE/lib/modules/$PACKAGE_RELEASE-$KERNEL_FLAVOUR/build

# DEBIAN control
mkdir -p $KERNEL_BASE_PACKAGE/DEBIAN

cat > $KERNEL_BASE_PACKAGE/DEBIAN/control << HEREDOC
Package: $DEBIAN_PACKAGE
Source: $DEBIAN_PACKAGE
Version: $PACKAGE_RELEASE
Section: main
Priority: standard
Architecture: $ARCH
Depends: kmod, linux-base (>= 4.5ubuntu1~16.04.1)
Homepage: https://kernel.org/
Rules-Requires-Root: no
Maintainer: $DEBFULLNAME <$DEBEMAIL>
Description: A minimal kernel package for ubuntu-server aarch64 running on opi-5-plus.
HEREDOC

# A simple postinstall script
cat > $KERNEL_BASE_PACKAGE/DEBIAN/postinst << HEREDOC
run-parts --report --exit-on-error --arg=$PACKAGE_RELEASE-$KERNEL_FLAVOUR --arg=/boot/vmlinuz-$PACKAGE_RELEASE-$KERNEL_FLAVOUR /etc/kernel/postinst.d
HEREDOC

# Assign proper permission for the script
chmod 755 $KERNEL_BASE_PACKAGE/DEBIAN/postinst

# Build packaage
dpkg-deb --build --compression gzip $KERNEL_BASE_PACKAGE $PACKAGE_PATH




set +x

echo "Bye Bye!!"

trap '' EXIT
exit 0
