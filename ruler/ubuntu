#!/bin/bash

set -eE
trap 'echo Error: in $0 on line $LINENO' ERR


attach_MOUNTPOINT() {
    local MOUNTPOINT="$1"

    if [ ! -c /dev/mem ]; then
        mknod -m 660 /dev/mem c 1 1
        chown root:kmem /dev/mem
    fi

    mount dev-live -t devtmpfs "$MOUNTPOINT/dev"
    mount devpts-live -t devpts -o nodev,nosuid "$MOUNTPOINT/dev/pts"
    mount proc-live -t proc "$MOUNTPOINT/proc"
    mount sysfs-live -t sysfs "$MOUNTPOINT/sys"
    mount securityfs -t securityfs "$MOUNTPOINT/sys/kernel/security"

    mount -t cgroup2 none "$MOUNTPOINT/sys/fs/cgroup"
    mount -t tmpfs none "$MOUNTPOINT/tmp"
    mount -t tmpfs none "$MOUNTPOINT/var/lib/apt/lists"
    mount -t tmpfs none "$MOUNTPOINT/var/cache/apt"
}

detach_MOUNTPOINT() {
    # Reverse the operations from setup_MOUNTPOINT
    local MOUNTPOINT
    MOUNTPOINT=$(realpath "$1")

    # ensure we have exactly one trailing slash, and escape all slashes for awk
    MOUNTPOINT_match=$(echo "$MOUNTPOINT" | sed -e's,/$,,; s,/,\\/,g;')'\/'
    # sort -r ensures that deeper MOUNTPOINTs are unmounted first
    awk </proc/self/mounts "\$2 ~ /$MOUNTPOINT_match/ { print \$2 }" | LC_ALL=C sort -r | while IFS= read -r submount; do
        mount --make-private "$submount"
        umount "$submount"
    done
}


export UBUNTU_RELASE_NAME="Ubuntu 25.04 (Plucky Puffin)"
export UBUNTU_RELASE_VERSION="25.04"

export PROJECT="ubuntu-cpc"
export SUITE="plucky"
export FLAVOR="server"

export ARCH=arm64
export IMAGEFORMAT=none
export IMAGE_TARGETS=none

export DEBIAN_FRONTEND=noninteractive
export DEBCONF_NONINTERACTIVE_SEEN=true
export LC_ALL=C
export LC_CTYPE=C
export LANGUAGE=C
export LANG=C

export SYSROOT="AARCH64"


set -x

# Create a SYSROOT directory and populate it with debootstrap.
debootstrap      \
    --arch=$ARCH \
    --components=main,universe,multiverse,restricted   \
    --include=$(python3 ./ruler/package.py --separator "," --server-essential-packages) \
    $SUITE   \
    $SYSROOT \
    "http://ports.ubuntu.com/ubuntu-ports"


    # "http://kambing.uu.sg/ubuntu-ports"

    # --extra-suites=oracular-updates,oracular-backports causing some serious issues.


# Apply HOSTNAME
echo "ubuntu" > $SYSROOT/etc/hostname


# Attach SYSROOT.
attach_MOUNTPOINT $SYSROOT

# Update, Upgrade, Add repositories.
chroot $SYSROOT apt update
chroot $SYSROOT apt -y upgrade
chroot $SYSROOT apt -y dist-upgrade
chroot $SYSROOT add-apt-repository -y ppa:jjriek/rockchip          # We need Joshua's repo.
chroot $SYSROOT add-apt-repository -y ppa:oibaf/graphics-drivers   # We need the upstream mesa repo.
chroot $SYSROOT apt update
chroot $SYSROOT apt -y --no-install-recommends install ubuntu-server-rockchip u-boot-orangepi-5-plus u-boot-tools u-boot-menu \
                                                       $(python3 ./ruler/package.py --separator " " --gpu-packages --server-extra-packages --pipewire-server-packages)
                                                       # This would install a bunch of packages.


# Get everything clean.
chroot $SYSROOT apt -y autoremove
chroot $SYSROOT apt clean

# Generate ssh keys.
chroot $SYSROOT ssh-keygen -A

# Create two virtual environments for Python
chroot $SYSROOT python -m venv --system-site-packages /opt/virtualenv/default
chroot $SYSROOT python -m venv /opt/virtualenv/paper

# Create a directory for python packages
chroot $SYSROOT mkdir -p /opt/packages/python3

# Allow all the users to install and modify packages in these environments
chroot $SYSROOT chmod -R 777 /opt/virtualenv/default /opt/virtualenv/paper /opt/packages/python3


#### We should be done by now ####
# Detach SYSROOT.
detach_MOUNTPOINT $SYSROOT

# Package SYSROOT.
(cd $SYSROOT &&  tar -p -c --sort=name --xattrs ./*) | xz -2 -T0 > "ubuntu-${UBUNTU_RELASE_VERSION}-preinstalled-${FLAVOR}-arm64.rootfs.tar.xz"

# Delete the SYSROOT directory
# rm -rf $SYSROOT

set +x

echo "Bye Bye!!"

trap '' EXIT
exit 0
